{"ast":null,"code":"var _jsxFileName = \"/Users/eddypeng/Desktop/vedette-demo/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./screens/Form\";\nimport ReportTable from \"./screens/Report_Table\";\nimport ReportComparisonScreen from \"./screens/ReportComparisonScreen\";\nimport { Routes, Route } from \"react-router-dom\";\nimport ViewReport from \"./screens/ViewReport\";\n\n/* Frontend App.js */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Send this data to API for similarity analysis\n\n  const [reportContent, setReportContent] = useState({\n    formPage: \"The Problem\"\n  });\n  const {\n    pathname\n  } = useLocation();\n\n  // Scroll to the top whenever the location changes\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n  const handleGetReportContent = async fieldsList => {\n    try {\n      let tempReportContent = {\n        ...reportContent\n      }; // Make a copy of reportContent\n\n      for (let i = 0; i < fieldsList.length; i++) {\n        let field = fieldsList[i];\n        tempReportContent[\"fieldTitle\" + (i + 1)] = field.fieldTitle;\n        tempReportContent[\"filedContent\" + (i + 1)] = field.fieldContent;\n        tempReportContent[\"formID\"] = 0; //For now we can assume same form and user for mvp\n        tempReportContent[\"userID\"] = 0;\n      }\n\n      // Update reportContent using functional update\n      setReportContent(prevReportContent => ({\n        ...prevReportContent,\n        ...tempReportContent\n      }));\n      console.log(reportContent);\n      const response = await fetch('http://localhost:9000/api/similarities/postUserInput', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(tempReportContent) // Send tempReportContent here\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send data to the server');\n      }\n      console.log('Data sent successfully to server');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  // Store data received from API after analysis\n\n  // return <Form />;\n  // Comment out <Form /> and such to see\n\n  // Pass in relevant/corresponding data to these components\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"\",\n      element: /*#__PURE__*/_jsxDEV(Form, {\n        getReportContent: handleGetReportContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/table\",\n      element: /*#__PURE__*/_jsxDEV(ReportTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/table/comparison\",\n      element: /*#__PURE__*/_jsxDEV(ReportComparisonScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/view-report\",\n      element: /*#__PURE__*/_jsxDEV(ViewReport, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n  // return <ReportComparisonScreen />;\n}\n_s(App, \"aqO9gI4WRMaRVa1jcplU6thv1wc=\", true);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Form","ReportTable","ReportComparisonScreen","Routes","Route","ViewReport","jsxDEV","_jsxDEV","App","_s","reportContent","setReportContent","formPage","pathname","useLocation","window","scrollTo","handleGetReportContent","fieldsList","tempReportContent","i","length","field","fieldTitle","fieldContent","prevReportContent","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","children","path","element","getReportContent","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eddypeng/Desktop/vedette-demo/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./screens/Form\";\nimport ReportTable from \"./screens/Report_Table\";\nimport ReportComparisonScreen from \"./screens/ReportComparisonScreen\";\nimport { Routes, Route } from \"react-router-dom\";\nimport ViewReport from \"./screens/ViewReport\";\n\n/* Frontend App.js */\nfunction App() {\n    // Send this data to API for similarity analysis\n\n    const [reportContent, setReportContent] = useState({\n        formPage: \"The Problem\",\n    });\n\n    const { pathname } = useLocation();\n\n    // Scroll to the top whenever the location changes\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    const handleGetReportContent = async (fieldsList) => {\n        try {\n            let tempReportContent = { ...reportContent }; // Make a copy of reportContent\n    \n            for (let i = 0; i < fieldsList.length; i++) {\n                let field = fieldsList[i];\n                tempReportContent[\"fieldTitle\" + (i + 1)] = field.fieldTitle;\n                tempReportContent[\"filedContent\" + (i + 1)] = field.fieldContent;\n                tempReportContent[\"formID\"] = 0; //For now we can assume same form and user for mvp\n                tempReportContent[\"userID\"] = 0;\n            }\n    \n            // Update reportContent using functional update\n            setReportContent(prevReportContent => ({ ...prevReportContent, ...tempReportContent }));\n    \n            console.log(reportContent);\n    \n            const response = await fetch('http://localhost:9000/api/similarities/postUserInput', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(tempReportContent), // Send tempReportContent here\n            });\n    \n            if (!response.ok) {\n                throw new Error('Failed to send data to the server');\n            }\n    \n            console.log('Data sent successfully to server');\n        } catch (error) {\n            console.error('Error:', error)\n        }\n    };\n\n    // Store data received from API after analysis\n\n    // return <Form />;\n    // Comment out <Form /> and such to see\n\n    // Pass in relevant/corresponding data to these components\n\n    return (\n        <Routes>\n            <Route path=\"\" element={<Form getReportContent={handleGetReportContent} />} />\n            <Route path=\"/table\" element={<ReportTable />} />\n            <Route path=\"/table/comparison\" element={<ReportComparisonScreen />} />\n            <Route path=\"/view-report\" element={<ViewReport />} />\n        </Routes>\n    );\n    // return <ReportComparisonScreen />;\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,sBAAsB,MAAM,kCAAkC;AACrE,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,sBAAsB;;AAE7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX;;EAEA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC;IAC/Cc,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,MAAM;IAAEC;EAAS,CAAC,GAAGC,WAAW,CAAC,CAAC;;EAElC;EACAf,SAAS,CAAC,MAAM;IACZgB,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACzB,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,MAAMI,sBAAsB,GAAG,MAAOC,UAAU,IAAK;IACjD,IAAI;MACA,IAAIC,iBAAiB,GAAG;QAAE,GAAGT;MAAc,CAAC,CAAC,CAAC;;MAE9C,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;QACxC,IAAIE,KAAK,GAAGJ,UAAU,CAACE,CAAC,CAAC;QACzBD,iBAAiB,CAAC,YAAY,IAAIC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGE,KAAK,CAACC,UAAU;QAC5DJ,iBAAiB,CAAC,cAAc,IAAIC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGE,KAAK,CAACE,YAAY;QAChEL,iBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QACjCA,iBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC;MACnC;;MAEA;MACAR,gBAAgB,CAACc,iBAAiB,KAAK;QAAE,GAAGA,iBAAiB;QAAE,GAAGN;MAAkB,CAAC,CAAC,CAAC;MAEvFO,OAAO,CAACC,GAAG,CAACjB,aAAa,CAAC;MAE1B,MAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAsD,EAAE;QACjFC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,iBAAiB,CAAC,CAAE;MAC7C,CAAC,CAAC;MAEF,IAAI,CAACS,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;MACxD;MAEAV,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACnD,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZX,OAAO,CAACW,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC;EACJ,CAAC;;EAED;;EAEA;EACA;;EAEA;;EAEA,oBACI9B,OAAA,CAACJ,MAAM;IAAAmC,QAAA,gBACH/B,OAAA,CAACH,KAAK;MAACmC,IAAI,EAAC,EAAE;MAACC,OAAO,eAAEjC,OAAA,CAACP,IAAI;QAACyC,gBAAgB,EAAExB;MAAuB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9EtC,OAAA,CAACH,KAAK;MAACmC,IAAI,EAAC,QAAQ;MAACC,OAAO,eAAEjC,OAAA,CAACN,WAAW;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDtC,OAAA,CAACH,KAAK;MAACmC,IAAI,EAAC,mBAAmB;MAACC,OAAO,eAAEjC,OAAA,CAACL,sBAAsB;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvEtC,OAAA,CAACH,KAAK;MAACmC,IAAI,EAAC,cAAc;MAACC,OAAO,eAAEjC,OAAA,CAACF,UAAU;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;EAEb;AACJ;AAACpC,EAAA,CAjEQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAmEZ,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}